# Docker Compose configuration for GreenFlow-Sage
# This file defines services for PostgreSQL, FastAPI, and Streamlit Dashboard.

services:
  db:
    image: postgres
    container_name: greenflow_db
    #restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    container_name: greenflow_api
    env_file:
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      db:
        condition: service_healthy
    # command: ["/bin/sh", "-c", "/app/api/entrypoint.sh"]
    command: ["uvicorn", "api.api:app", "--host", "0.0.0.0", "--port", "${API_PORT}"]
    volumes:
      - ./api:/app/api
      - ./db:/app/db
      - ./data:/app/data

  dashboard:
    build:
      context: .
      dockerfile: dashboard/Dockerfile
    container_name: greenflow_dashboard
    env_file:
      - .env
    ports:
      - "${DASHBOARD_PORT}:${DASHBOARD_PORT}"
    depends_on:
      - api
    command: ["streamlit", "run", "dashboard/app.py", "--server.port=${DASHBOARD_PORT}", "--server.address=0.0.0.0", "--server.runOnSave", "true", "--server.enableCORS", "true"]
    volumes:
      - ./dashboard:/app/dashboard:delegated

volumes:
  db_data:
